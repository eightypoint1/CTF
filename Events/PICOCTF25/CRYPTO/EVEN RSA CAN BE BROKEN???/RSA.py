from Crypto.Util.number import inverse, long_to_bytes
from sympy import factorint

n = 18094286541374327939653999390319899338701783859002384831012323138308733337820174998808418442626075049410016641387226106367766039962669132911551691369364222
e = 65537
c = 14327431271571282734283371598224025632767621060359589671782838907338146624625859399260122794602130223986661869543087840117154046163250001547402995902125467

factors = factorint(n)

print(factors)

p, q = list(factors.keys())

phi = (p-1) * (q-1)
print(phi)

privateKey = inverse(e,phi)
print(privateKey)

m = pow(c,privateKey,n)

print(long_to_bytes(m).decode())










